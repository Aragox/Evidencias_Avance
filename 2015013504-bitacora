Bitácora de Ricardo Víquez Mora

Fecha: 16/12/2019

- Se entregó el prototipo completo, la carta de aceptación del prototipo, y se definió el tema del paper.
- En el frontend se implementó la ventana de ingreso, junto con la validación de sus entradas.
- En el frontend se avanzó la implementación de las ventanas de modificación de materiales externos.

Fecha: 22/12/2019
Se realizó: 
1.	Iteración 1 - ERS  
2.	Iteración 1 – SAD 
3.	Iteración 1 – Ejecución (Informe ejecución de pruebas)
4.	Iteración 1 – Casos de Pruebas  
5.	Diseño de Base de Datos 
6.	Conexión a Base de Datos 
7.	Implementación de la Ventana Registro
8.	Operaciones CRUD, específicamente: Crear Usuario, Leer Usuario, Crear Material Externo, Leer Material Externo y 
    Modificar Material Externo.
9.	App Web se comunica con App servidor
10.	Funcionalidad Registro
11.	Funcionalidad Ingreso
12.	Funcionalidad Buscar
13.	Funcionalidades de Mantenimiento de Materiales Externos, específicamente: Modificar Materiales Externos.

Fecha: 29/12/2019
Se implementó:
1.	Funcionalidad Cálculo de valores nutricionales desde la interfaz 
2.	Funcionalidad Cálculo de costos desde la interfaz   
3.	Funcionalidad Confirmar si la preparación de un platillo es posible desde la interfaz

Fecha: 3/1/2020
Se realizó:
1.	Iteración 2 – Casos de Pruebas
2.	Iteración 2 – ERS
3.	Funcionalidad “Confirmar si los ingredientes de un platillo se pueden conseguir en cierto mes desde la interfaz”
4.	Funcionalidades de Mantenimiento de Materiales Externos (específicamente crear)

Fecha: 14/1/2020
Se hizo:
1.	Implementación de las ventanas faltantes para el Frontend (Al fin se hicieron todas las páginas de la aplicación web)
2.	Iteración 3 – ERS 
3.	Iteración 3 – SAD 
4.	Iteración 3 – Casos de Pruebas
5.	Iteración 3 – Ejecución de Pruebas
6.	Funcionalidades de Mantenimiento de Materiales Externos (específicamente eliminar)
7.	Funcionalidades de Mantenimiento de Ingredientes (crear, modificar y eliminar)
8.	Funcionalidades de Mantenimiento de Recetas (crear, modificar y eliminar)
9.	Ahora se utiliza un modal para seleccionar los meses en la funcionalidad “Disponibilidad en Temporada” (antes era un widget de "select" de ionic, pero no permitía seleccionar todos los ítems a la vez)
10.	Campos de texto ya no aceptan caracteres extraños. (esto le da mayor seguridad a la aplicación)
11.	Campo de contraseña ya no acepta caracteres extraños. (esto le da mayor seguridad a la aplicación)
12.	Campos de peso o porción ahora aceptan números enteros o flotantes. (para mayor comodidad del usuario, estos campos aceptan número enteros o flotantes)
Posdata: - La minuta 8 y la carta de aceptación del cliente se firmaron hasta el día de hoy.
         - Descubrí que ya tengo hecho el requerimiento técnico de tener https en el ambiente de desarrollo.

Fecha: 17/1/2020
Está hecho:
1.	Convertir Aplicación Web a una Aplicación Móvil Nativa (ahora tenemos una app web y una app móvil)
2.	Plan de pruebas de aceptación (se actualizaron algunos casos de prueba)
3.	Ejecución de pruebas de aceptación (las pruebas se ejecutaron de antemano)
4.	Manual técnico de usuario (la app móvil no está disponible en ninguna app store, por lo que su proceso de instalación no es tan amigable)
5.	Calificación usuario y evidencias (se obtuvo una calificación de 10!)
6.	Entrega del proyecto al cliente (el cliente ahora puede utilizar tanto la app web como la móvil para su negocio)
7.	Ahora se puede determinar la disponibilidad en temporada para las recetas
8.	Se agregó el botón “Actual” en la ventana “realizar”, el cual permite ver las cantidades actuales disponibles del inventario (es un nuevo caso de uso, pero es un extra) 
9.	En los campos de contraseña, se agregó un botón para ocultar o revelar la contraseña escrita en el campo de texto (implementarlos fue más fácil de lo que pensé)
10.	Se logró que la aplicación móvil se conecte exitosamente al servidor local (hacer esto me costó bastante)
11.	Ahora los formularios se limpian después de crear algún ítem (esto fué muy fácil de implementar con los formularios de Angular)
